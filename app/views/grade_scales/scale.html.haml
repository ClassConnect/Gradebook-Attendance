:javascript
  $(document).ready(function() {
    scale_mode_validate($('input[checked=checked]'));
    $('#edit_scale').prepend('<div id="notice"></div>');
    $('#edit_scale').bind('submit', function(){
      $('#notice').hide();
      if($("input[type=radio]:checked").attr('value') === "scale"){
        if(validate_scales_form()){
          $.post('/grade_scales/#{@scale.id}', $(this).serialize(), null, "script");
          closeBox();
          return false;
        }
        else{
          $('#notice').html('<h2>Grade ranges are busted.</h2>');
          $('#notice').show();
          return false;
        }
      }
      else{
       $.post('/grade_scales/#{@scale.id}', $(this).serialize(), null, "script");
       closeBox();
       return false; 
      }
    });

    $("input[type=radio]").click(function(){
      scale_mode_validate(this);
    });
  }); 

=form_for @scale, :remote => true, :html => {:id => "edit_scale", :method => "put"} do |s|
  %div{:id => "options"}
    %div{:id => "scale_button"}
      =s.radio_button :scale_type, :scale 
      =s.label :scale_type, "Scale"
    =s.radio_button :scale_type, :percentage
    =s.label :scale_type, "Percentage"
    %br
    =s.radio_button :scale_type, :manual
    =s.label :scale_type, "Manual"
  %div{:id => "range_fields"}
    -#Nested models ignore scope, so you need to do it as the second arg
    =s.fields_for :grade_ranges, @scale.grade_ranges.desc(:from) do |builder|  
      =render "grade_range_fields", :f => builder
  =link_to_add_fields "Add Range", s, :grade_ranges
  %div{:id => "scale_submission"}
    =s.submit
    =close_openBox_input