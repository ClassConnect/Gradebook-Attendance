:javascript
  $(document).ready(function() {
      //START OTHER STUFF
      add_new_input();
      add_manual_input();
      init_assignments_array(#{@assignments.to_json :only => [:_id, :point_value, :assignment_type_id]});
      init_assignment_types(#{@settings.assignment_types.to_json}, "#{@settings.weight_type}");
      init_gradescale(#{@settings.grade_scale.grade_ranges.asc(:from).to_json :except => [:_id]}, "#{@settings.grade_scale.scale_type}", "#{@settings.grade_scale.id}");
      init_course_id(#{@course.id});
    var num_students = #{@students.count};
      init_student_names();
      
    _grading_options = ["DR", "EX", "IN"];
    $('#add_assignment_button').click(function(){
      openBox('/gradebooks/#{@course.id}/assignments', 300);
    });

    $('#edit_scale_button').click(function(){
      openBox('/gradebooks/grading_scale/#{@course.id}', 350);
    });

    $('#edit_weight_button').click(function(){
      openBox('/gradebooks/#{@course.id}/weight', 350);
    });

      initTable(#{@students.count});
      $('.dataTables_scrollHeadInner .datatable').attr('style', "");
      //$('.assignment_head .datatable').attr('style', "");
      //$('.DTFC_Cloned .header_row th').attr('style', "");

      if(#{@students.count} > 0){
        if(grading_scale_method != "manual"){
          $('.dataTables_scrollBody .datatable tbody tr').each(function(){
            var grade = calculateGrade(this);
            apply_grade(this, grade);
          });
        }
      }

      _focused_cell = null;

      document.addEventListener('click', click_block, true);
      document.addEventListener('keydown', keyboard_block, true);
    
      hide_filter_label();
      init_headers();
      $(document).delegate(".ui-icon-info", "mouseover", function(){
        tooltip_init(this);
      });

      $(document).delegate(".grade_field", "keyup", function(){
        if(jeditable_validator($(this).val())){
          }
        else{
        $(this).val("");
        }
        });

      $(document).delegate("#filter_text", "focus", function(){
        var text = $("#filter_text").value;
        if($("#filter_text").val() === "enter name to filter"){
        $("#filter_text").removeClass("filter_placeholder_text");
        $("#filter_text").val("");
        }
      });

      $(document).delegate("#filter_text", "blur", function(){
      if($("#filter_text").val() == ""){
      $("#filter_text").addClass("filter_placeholder_text");
      $("#filter_text").val("enter name to filter");
      }
      });
  }); 

-if Rails.env.development?
  %br
  %br
  %br
  %br
  %br
  %br
  %br
%button{:type => "button", :class => "button", :id => "add_assignment_button"}="Add Assignment"
%button{:type => "button", :class => "button", :id => "edit_scale_button"}="Edit Scale"
%button{:type => "button", :class => "button", :id => "edit_weight_button"}="Edit Weighting"
%div{:id => "gradebook_div"}
  =render "students_table"
-if Rails.env.development?
  %div{:id => "dialogBox"}
  %div{:id => "clearbox"}
  %div{:id => "blackbox"}
%div{:class => "comment-tip"}
  %div{:id => "comment-box-text"}="Enter a comment"
  %textarea{:id => "comment-entry", :rows => 2, :cols => 17}
  %button{:id => "submit-comment"}="Submit"
%div{:class => "options-tip"}
  %button{:id => "ex_button"}="Excused" 
  %br
  %button{:id => "dr_button"}="Dropped"
  %br
  %button{:id => "in_button"}="Incomplete"
